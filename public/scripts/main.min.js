angular.module("app",["ngRoute","mobile-angular-ui.core.capture","mobile-angular-ui.components.sidebars","mobile-angular-ui.components.modals","mobile-angular-ui.core.outerClick","mobile-angular-ui.components.scrollable","mobile-angular-ui.components.navbars","mobile-angular-ui.components.switch","app.applications","app.services","app.overview"]),angular.module("app.constants",[]),angular.module("app.directives",["ngAnimate","app.constants"]),angular.module("app.applications",["app.constants","ngResource"]),angular.module("app.services",["app.constants","ngResource"]),angular.module("app.overview",["app.directives","ngResource"]),angular.module("app").config(["$routeProvider","$httpProvider",function($routeProvider,$httpProvider){$routeProvider.when("/overview",{templateUrl:"scripts/view/overview/index.html",controller:"OverviewController"}).when("/applications",{templateUrl:"scripts/view/applications/index.html",controller:"ApplicationsController"}).when("/applications/:id",{templateUrl:"scripts/view/applications/appOverview.html",controller:"ApplicationsController"}).when("/services_instances",{templateUrl:"scripts/view/services/index.html",controller:"ServicesController"}).when("/services_instances/:id",{templateUrl:"scripts/view/services/instanceDetail.html",controller:"ServicesController"}).when("/services",{templateUrl:"scripts/view/services/serviceList.html",controller:"ServicesController"}).when("/services/:id",{templateUrl:"scripts/view/services/serviceDetail.html",controller:"ServicesController"}).otherwise({templateUrl:"scripts/view/overview/index.html",controller:"OverviewController"})}]),angular.module("app.constants").factory("AppStatus",function(){return{0:{text:"已停止",color:"bg-grey"},1:{text:"启动中",color:"bg-blue-grey"},2:{text:"正常",color:"bg-green"},3:{text:"部分异常",color:"bg-orange"},4:{text:"异常",color:"bg-red"}}}),angular.module("app.constants").filter("groupBy",["$parse",function($parse){return function(list,group_by){var filtered=[],prev_item=null,group_changed=!1,new_field="group_by_CHANGED";return angular.forEach(list,function(item){if(group_changed=!1,null!==prev_item){group_by=angular.isArray(group_by)?group_by:[group_by];for(var i=0,len=group_by.length;len>i;i++)$parse(group_by[i])(prev_item)!==$parse(group_by[i])(item)&&(group_changed=!0)}else group_changed=!0;item[new_field]=group_changed?!0:!1,filtered.push(item),prev_item=item}),filtered}}]),angular.module("app.constants").factory("ServiceInstanceStatus",function(){return{0:{text:"已停止",color:"bg-grey"},1:{text:"正常",color:"bg-green"},2:{text:"异常",color:"bg-red"}}}),angular.module("app.applications").factory("AppStateHandler",["AppStatus","Application",function(AppStatus,Application){var currentState=0,states={start:function(guid,cb){var self=this;Application.start({guid:guid},function(data){{var count=0;setInterval(function(){states.refresh(guid,function(d){(1==d.app_resource.state||20==count)&&(self.app&&(self.app=d),cb.call(self,d))})},1e3)}})},restart:function(guid,cb){var self=this;Application.restart({guid:guid},function(data){{var count=0;setInterval(function(){states.refresh(guid,function(d){(1==d.app_resource.state||20==count)&&(self.app&&(self.app=d),cb.call(self,d))})},1e3)}})},stop:function(guid,cb){var self=this;Application.stop({guid:guid},function(data){self.app&&(self.app.app_resource.state=0),cb.call(self,data)})},refresh:function(guid,cb){var self=this;Application.refresh({guid:guid},function(data){self.app&&(self.app=data),cb.call(data)})}},changeState=function(guid,action,scope){states[action]&&states[action].call(scope||this,guid)},getCurrentState=function(){return currentState};return{changeState:changeState,getCurrentState:getCurrentState}}]),angular.module("app.applications").factory("Application",["$resource",function($resource){return $resource("/applications/:guid",{guid:"@guid"},{start:{method:"PUT",url:"/applications/:guid/start"},restart:{method:"PUT",url:"/applications/:guid/restart"},stop:{method:"PUT",url:"/applications/:guid/stop"},refresh:{method:"GET"}})}]),angular.module("app.services").factory("LoginInterceptor",["$location",function($location){return{response:function(config){return config.data.error&&"1001"==config.data.errno?(console.log("session time out"),void $location.path("/login")):(console.log("success!"),config.data)},responseError:function(config){return console.log("error"),config.data}}}]),angular.module("app.overview").factory("OverviewService",["$resource",function($resource){return $resource("/dashboard",{guid:":guid"},{get:{method:"GET"},post:{method:"POST"}})}]),angular.module("app.services").factory("ServiceInstance",["$resource",function($resource){return $resource("/service_instances/:guid",{guid:"@guid"},{})}]),angular.module("app.services").factory("Service",["$resource",function($resource){return $resource("/services/:guid",{guid:"@guid"},{})}]),angular.module("app.directives").directive("card",function(){return{restrict:"E",replace:!0,transclude:!0,templateUrl:"/scripts/directive/templates/card.html",scope:{cardTitle:"@",showFoot:"@",titleColor:"@",titleFontColor:"@"},controller:function($scope,$element,$attrs,$transclude){$scope.cardBody=$element.find(".card-body"),$scope.cardExpanded=!0,$scope.contentExpanded=!0,$transclude(function(clone,scope){var contentSection=$element.find(".card-content"),content=clone.filter(".c-content");contentSection.append(content)}),$scope.toggleExpand=function(){$scope.cardExpanded?($scope.cardBody.height($scope.cardBody.height()),$scope.cardExpanded=!1):$scope.cardExpanded=!0}}}}),angular.module("app.directives").directive("detailHeader",["AppStatus",function(AppStatus){return{restrict:"E",replace:!0,transclude:!0,templateUrl:"/scripts/directive/templates/detailHeader.html",scope:{title:"@",bgColor:"@",imgUrl:"@",headerBgColor:"@",statusColor:"@",statusText:"@"},controller:function($scope,$element,$attrs,$transclude){$scope.appStatus=AppStatus,$transclude(function(clone,scope){var subContentBlock=$element.find(".sub-content"),subContent=clone;subContentBlock.append(subContent)})}}}]),angular.module("app.directives").directive("groupedList",[function(){return{restrict:"A",transclude:!0,templateUrl:"/scripts/directive/templates/groupedList.html",scope:{list:"="},controller:function($scope,$element,$attrs,$transclude){console.log($scope)}}}]),angular.module("app.directives").directive("percentageBar",function(){return{restrict:"E",replace:!0,templateUrl:"/scripts/directive/templates/percentageBar.html",scope:{items:"="},controller:function($scope,$element){$scope.totalValue=0,$scope.generatePercentage=function(item){return item.value/$scope.totalValue*100},$scope.$watch("items",function(value){angular.forEach(value,function(v,i){this.totalValue+=v.value},$scope)},!0)}}}),angular.module("app.directives").directive("processBar",function(){return{restrict:"E",replace:!0,templateUrl:"/scripts/directive/templates/processBar.html",scope:{percent:"@"},controller:function($scope,$element){$scope.test="60%",$scope.color="bg-green",$scope.barStyle={width:0},$scope.$watch("percent",function(value){$scope.barStyle.width=value;var v=value.replace("%","");return $scope.color=60>=v?"bg-green":v>60&&80>=v?"bg-orange":"bg-red"})}}}),angular.module("app.directives").directive("quotaCard",function(){return{restrict:"E",replace:!0,transclude:!0,templateUrl:"/scripts/directive/templates/quotaCard.html",scope:{used:"@",all:"@",quotaName:"@"},controller:function($scope,$element,$attrs,$transclude){$transclude(function(clone,scope){var dataLine=$element.find(".data-line"),extraLine=$element.find(".extra-line"),data=clone.filter(".data"),extra=clone.filter(".extra");dataLine.append(data),extraLine.append(extra)}),$scope.loadChart=function(){$element.find(".quota-chart").highcharts({chart:{type:"pie",height:100,width:100,spacing:[0,0,0,0]},title:{text:null},plotOptions:{pie:{center:["50%","50%"],dataLabels:{enabled:!1},innerSize:"80%",colors:["#2196F3","#B0BEC5"]}},series:[{data:[parseInt($scope.used),parseInt($scope.all-$scope.used)]}]})},$scope.$watchGroup(["used","all"],function(v){$scope.loadChart()})}}}),angular.module("app.applications").controller("ApplicationsController",["$scope","$window","$routeParams","AppStatus","Application","AppStateHandler",function($scope,$window,$routeParams,AppStatus,Application,AppStateHandler){$scope.appStatus=AppStatus,$scope.apps=[],$scope.app={app_type:"ruby",VCAP_SERVICES:"{....}",app_resource:{disk_quota:1024,health:100,instances:3,running_instances:1,memory:128,org_name:"jimshute@163.com-org",space_name:"dev",state:3},available_domains:[{guid:"....",name:"117.78.6.213.xip.io"}],available_service:[{guid:"....",name:"mongodb-test",service_plan_name:"default"}],bind_services:[{guid:"...",bound_app_count:1,healthy:"normal",name:"mongodb-test",service_name:"mongodb",service_plan:{guid:"...",name:"default"}}],build_pack:"java_buildpack",command:null,created_time:"2014-12-12 16:41:23",guid:"12523244",instances:[{state:"RUNNING",stats:{disk_quota:1073741824,fds_quota:16384,host:"10.123.148.228",mem_quota:134217728,name:"jimtest",port:"62197",uptime:121247,uris:["jimtest.117.78.6.213.xip.io"],usage:{cpu:.0076722058,disk:103878656,mem:126705664,time:"2015-03-17 11:01:23"}}}],name:"jimtest150311",environments:{env_1:"value1",env_2:"value2"}},$scope.getList=function(){Application.query(function(data){$scope.apps=data,console.log(data)})},$scope.getAppOverview=function(){Application.get({guid:$routeParams.id},function(data){$scope.app=data,$scope.app.mmM=(data.app_resource.memory*data.app_resource.running_instances/1024/1024).toFixed(0),$scope.app.ummM=(data.app_resource.memory_usage/1024/1024).toFixed(0),$scope.app.hddM=(data.app_resource.disk_quota*data.app_resource.running_instances/1024/1024).toFixed(0),$scope.app.uhddM=(data.app_resource.disk_usage/1024/1024).toFixed(0)})},$scope.generateUsage=function(type){var usage=0;return angular.forEach($scope.app.instances,function(v,i){usage+=v.stats.usage[type]}),usage},$scope.goBack=function(){$window.history.back()},$scope.operateApp=function(action){AppStateHandler.changeState($scope.app.guid,action)}}]),angular.module("app.overview").controller("OverviewController",["$scope","OverviewService",function($scope,OverviewService){$scope.routeNum=0,$scope.totalRoute=1,$scope.serviceNum=0,$scope.totalService=1,$scope.msgInfo=[{color:"bg-red",value:1},{color:"bg-orange",value:2},{color:"bg-green",value:2}],$scope.apps=[],$scope.services=[],$scope.messages=[],$scope.loadData=function(data){$scope.routeNum=data.space_summary.routes_num,$scope.totalRoute=data.org_quota.total_routes,$scope.serviceNum=data.space_summary.service_info.length,$scope.totalService=data.org_quota.total_services,$scope.apps=data.space_summary.app_info,$scope.services=data.space_summary.service_info},$scope.initOverview=function(){OverviewService.get(function(data){$scope.loadData(data),console.log(data)})}}]),angular.module("app.services").controller("ServicesController",["$scope","$window","$routeParams","Service","ServiceInstance","ServiceInstanceStatus",function($scope,$window,$routeParams,Service,ServiceInstance,ServiceInstanceStatus){$scope.serviceInstanceStatus=ServiceInstanceStatus,$scope.serviceInstances=[],$scope.serviceInstance={},$scope.services=[],$scope.service={},$scope.selectedPlan=null,$scope.initServiceInstanceList=function(){ServiceInstance.query(function(data){$scope.serviceInstances=data})},$scope.loadServiceInstance=function(){var guid=$routeParams.id;ServiceInstance.get({guid:guid},function(data){$scope.serviceInstance=data})},$scope.loadServiceList=function(){Service.query(function(data){$scope.services=data})},$scope.loadService=function(){var guid=$routeParams.id;Service.get({guid:guid},function(data){$scope.service=data})},$scope.goBack=function(){$window.history.back()},$scope.toggleSelect=function(){$scope.selectedPlan=this.plan},$scope.submitAddInstance=function(){}}]);